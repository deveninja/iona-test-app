{"version":3,"sources":["components/common/dropdown/dropdown.module.scss","components/common/snipper/spinner.module.scss","enums/pagination.ts","config/keys.ts","api/catApi.ts","actions/catsAction.ts","components/cats/CatDetails.tsx","components/common/dropdown/DropDownList.tsx","components/common/snipper/Spinner.tsx","components/cats/CatList.tsx","pages/cats/CatsPage.tsx","components/common/card/Card.tsx","components/common/card/card.module.scss","components/cats/cat.module.scss"],"names":["module","exports","Pagination","config","catApiKey","process","API_KEY","catAPI","axios","create","baseURL","headers","getCatBreed","params","dispatch","a","type","GlobalType","LOADING_START","payload","id","page","limit","queryParams","breed_id","order","get","data","length","BreedType","BREED_LIST_FINAL","final","count","CatsType","GET_CAT_BREED","breed","LOADING_STOP","BREED_LIST_INCREMENT","ERROR","show","message","CatDetails","props","initialCatState","useMemo","url","useState","cat","setCat","cats","useSelector","state","catsReducer","useDispatch","useLocation","history","match","fallBackUrl","prevPath","AppRoute","Cats","useEffect","GET_CAT","className","styles","catList","Row","data-testid","title","breeds","name","wrapper","Col","lg","paddedFlex","selectArea","detailSection","subTitle","origin","temperament","description","Button","variant","onClick","push","contentArea","singeCat","src","alt","DropDown","options","onChange","selected","renderDropDown","useCallback","arr","map","item","index","value","Form","Select","aria-label","dropDown","disabled","SpinnerComponent","spinnerComponentWrapper","spinnerWrapper","Spinner","animation","role","CatList","currentBreed","setCurrentBreed","catsBreedList","breedsReducer","Breed","CATS","loading","globalReducer","loadingState","showBtn","len","Object","values","renderCats","i","Card","imgSrc","size","btnLabel","link","to","dropDownObject","DEFAULT_PAGE_NO","DEFAULT_LIMIT","GET_CAT_BREED_LIST","e","target","Home","Alert","Date","now","CatsPage","exact","path","component","CardComponent","text","style","width","card","pathname","textDecoration","imageWrapper","Body","Title","Text"],"mappings":"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","file":"static/js/4.ffa7bd30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropDown\":\"dropdown_dropDown__QaYkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerComponentWrapper\":\"spinner_spinnerComponentWrapper__1Nc_8\",\"spinnerWrapper\":\"spinner_spinnerWrapper__39s_q\"};","export enum Pagination {\r\n    DEFAULT_LIMIT = 10,\r\n    DEFAULT_PAGE_NO = 1\r\n}","const config = {\r\n    catApiKey: process.env.API_KEY\r\n}\r\n\r\nexport default config","import axios from 'axios'\r\nimport config from '../config/keys'\r\n\r\n/**\r\n * @description - This will also serve as an interceptor for all catapi endpoints\r\n */\r\n\r\nconst version = 'v1'\r\n\r\nconst catAPI = axios.create({\r\n    baseURL: `https://api.thecatapi.com/${version}`,\r\n    headers: {\r\n        'x-api-key': config.catApiKey\r\n    }\r\n})\r\n\r\nexport default catAPI","import catAPI from 'api/catApi'\r\nimport { AxiosResponse } from 'axios'\r\nimport { BreedType, CatsType, GlobalType } from 'enums/actionTypes'\r\nimport { Pagination } from 'enums/pagination'\r\nimport { SearchParamsType } from 'interfaces/searchParams'\r\nimport { AppDispatch } from 'store'\r\n\r\n\r\nexport const getCatBreed = (params: SearchParamsType) => async (dispatch: AppDispatch) => {\r\n\r\n    dispatch({\r\n        type: GlobalType.LOADING_START,\r\n        payload: false\r\n    })\r\n\r\n\r\n    const { id, page, limit } = params\r\n\r\n    const queryParams = {\r\n        params: {\r\n            breed_id: id,\r\n            page: page ?? 1,\r\n            limit: limit ?? 10,\r\n            order: 'ASC'\r\n        }\r\n    }\r\n\r\n    try {\r\n        const { data }: AxiosResponse = await catAPI.get('/images/search', queryParams)\r\n\r\n        if (data.length < queryParams.params.limit) {\r\n            dispatch({\r\n                type: BreedType.BREED_LIST_FINAL,\r\n                payload: { ...queryParams.params, final: true, count: data.length }\r\n            })\r\n        }\r\n\r\n        return (\r\n            dispatch({\r\n                type: CatsType.GET_CAT_BREED,\r\n                payload: { breed: id, data }\r\n            }),\r\n            dispatch({\r\n                type: GlobalType.LOADING_STOP,\r\n                payload: false\r\n            }),\r\n            dispatch({\r\n                type: BreedType.BREED_LIST_INCREMENT,\r\n                payload: { ...queryParams.params, count: data.length }\r\n            })\r\n        )\r\n    } catch (error: any) {\r\n\r\n        dispatch({\r\n            type: GlobalType.LOADING_STOP,\r\n            payload: false\r\n        })\r\n\r\n        dispatch({\r\n            type: GlobalType.ERROR,\r\n            payload: {\r\n                show: true,\r\n                message: 'Apologies but we could not load new cats for you at this time! Miau!'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getCat = (id: string, breed: string) => async (dispatch: AppDispatch) => {\r\n\r\n    dispatch({\r\n        type: GlobalType.LOADING_START,\r\n        payload: false\r\n    })\r\n\r\n    try {\r\n        const { data }: AxiosResponse = await catAPI.get(`/images/${id}`)\r\n\r\n        return (\r\n            dispatch({\r\n                type: CatsType.GET_CAT,\r\n                payload: { breed, data }\r\n            }),\r\n\r\n            dispatch({\r\n                type: GlobalType.LOADING_STOP,\r\n                payload: false\r\n            })\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GlobalType.LOADING_STOP,\r\n            payload: false\r\n        })\r\n\r\n        dispatch({\r\n            type: GlobalType.ERROR,\r\n            payload: {\r\n                show: true,\r\n                message: 'Apologies, the cat is not home! Miau!'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getCatBreedList = () => async (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: GlobalType.LOADING_START,\r\n        payload: false\r\n    })\r\n\r\n    try {\r\n        const { data }: AxiosResponse = await catAPI.get(`/breeds`)\r\n\r\n        const dropDownObject = data.map(({ id, name }: { id: string, name: string }) => {\r\n            return {\r\n                id,\r\n                name,\r\n                page: Pagination.DEFAULT_PAGE_NO,\r\n                limit: Pagination.DEFAULT_LIMIT,\r\n                final: false,\r\n                count: 0\r\n            }\r\n        })\r\n\r\n        return (\r\n            dispatch({\r\n                type: CatsType.GET_CAT_BREED_LIST,\r\n                payload: dropDownObject\r\n            }),\r\n            dispatch({\r\n                type: GlobalType.LOADING_STOP,\r\n                payload: false\r\n            })\r\n        )\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GlobalType.LOADING_STOP,\r\n            payload: false\r\n        })\r\n\r\n        dispatch({\r\n            type: GlobalType.ERROR,\r\n            payload: {\r\n                show: true,\r\n                message: 'Apologies, the cats are busy at the moment! Miau!'\r\n            }\r\n        })\r\n    }\r\n}","import { getCat } from 'actions'\r\nimport { Cat, CatList } from 'interfaces/cat'\r\nimport { MatchParams, StateType } from 'interfaces/routeProps'\r\nimport React, { useEffect, useMemo, useState } from 'react'\r\nimport { Button, Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RouteComponentProps, useLocation } from 'react-router-dom'\r\nimport { AppState } from 'store'\r\n\r\nimport styles from './cat.module.scss'\r\nimport { AppRoute } from 'enums/route'\r\n\r\nconst CatDetails: React.FC<RouteComponentProps<MatchParams>> = (props: RouteComponentProps<MatchParams>) => {\r\n\r\n    const initialCatState: Cat = useMemo(() => ({ id: '', url: '' }), [])\r\n\r\n    const [cat, setCat] = useState<Cat>(initialCatState)\r\n    const cats = useSelector<AppState, CatList>(state => state.catsReducer)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { state } = useLocation<StateType>()\r\n\r\n    const { history, match }: RouteComponentProps<MatchParams> = props\r\n    const { params } = match\r\n\r\n\r\n    const fallBackUrl = useMemo(() =>\r\n        (state?.prevPath ?? `${AppRoute.Cats}/${params.breed}`),\r\n        [state?.prevPath, params.breed]\r\n    )\r\n\r\n    /**\r\n     * =======================================================================\r\n     * @description - This block will solve if the single view should call\r\n     * the api endpoint or not without adding complexity in the action types\r\n     * inside the reducer\r\n     * =======================================================================\r\n     */\r\n\r\n    useEffect(() => {\r\n\r\n        if (cats[params?.breed]?.[params?.id]) {\r\n            setCat(cats[params?.breed][params?.id])\r\n        }\r\n\r\n        if (!cats[params?.breed]?.[params?.id]) {\r\n            dispatch(getCat(params?.id, params?.breed))\r\n        }\r\n\r\n    }, [dispatch, params?.breed, cats, params?.id])\r\n\r\n    /** ===================================================================== */\r\n\r\n    /**\r\n     * @SPECS\r\n     * data-testid=\"backBtn\"\r\n     * data-testid=\"imageSection\"\r\n     * data-testid=\"breedName\"\r\n     * data-testid=\"breedDescription\"\r\n     */\r\n    return (\r\n        <div className={styles.catList}>\r\n            <Row>\r\n                <span\r\n                    data-testid=\"pageHeading\"\r\n                    className={styles.title}\r\n                >\r\n                    {cat?.breeds?.[0]?.name ?? 'The Cat'}\r\n                </span>\r\n            </Row>\r\n            <div className={styles.wrapper}>\r\n                <Row>\r\n                    <Col lg={3}>\r\n                        <div className={`${styles.paddedFlex} ${styles.selectArea}`}>\r\n                            <div className={styles.detailSection}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <span className={styles.subTitle}>Origin: </span>\r\n                                        <p>{cat?.breeds?.[0]?.origin}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <span className={styles.subTitle}>Temparament: </span>\r\n                                        <p>{cat?.breeds?.[0]?.temperament}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <span className={styles.subTitle}>Description:</span>\r\n                                        <p>{cat?.breeds?.[0]?.description}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <Button\r\n                                data-testid=\"returnHomeBtn\"\r\n                                variant=\"secondary\"\r\n                                onClick={() => history.push(fallBackUrl)}\r\n                            >\r\n                                Back to list\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={9}>\r\n                        <div\r\n                            data-testid=\"listSection\"\r\n                            className={`${styles.paddedFlex} \r\n                            ${styles.contentArea}`}\r\n                        >\r\n                            <img\r\n                                className={styles.singeCat}\r\n                                src={cat?.url ?? ''}\r\n                                alt={`${cat?.breeds?.[0]?.name} cat`}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CatDetails","import { DropDownProps, DropDownType } from 'interfaces/dropdown'\r\nimport { useCallback } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nimport styles from './dropdown.module.scss'\r\n\r\nconst DropDown: React.FC<DropDownProps> = (props: DropDownProps) => {\r\n    const { options, onChange, selected } = props\r\n\r\n    const renderDropDown = useCallback((arr: DropDownType[]) => {\r\n        return arr.map((item: DropDownType, index: number) => {\r\n            return (\r\n                <option key={item.id + index} value={item.id}>{item.name}</option>\r\n            )\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Form.Select\r\n            aria-label=\"Default select example\"\r\n            className={styles.dropDown}\r\n            value={selected}\r\n            onChange={onChange}\r\n        >\r\n            <option value=\"\" disabled>Select Breed</option>\r\n            {renderDropDown(options)}\r\n        </Form.Select>\r\n    )\r\n}\r\n\r\nexport default DropDown","import { Spinner } from 'react-bootstrap'\r\n\r\nimport styles from './spinner.module.scss'\r\n\r\nconst SpinnerComponent: React.FC<{ message: string }> = ({ message }: { message: string }) => {\r\n    return (\r\n        <div className={styles.spinnerComponentWrapper}>\r\n            <div className={styles.spinnerWrapper}>\r\n                <Spinner animation=\"grow\" variant=\"secondary\" />\r\n                <Spinner animation=\"grow\" variant=\"secondary\" />\r\n                <Spinner animation=\"grow\" variant=\"secondary\" />\r\n                <Spinner animation=\"grow\" variant=\"secondary\" />\r\n                <Spinner animation=\"grow\" variant=\"secondary\" />\r\n                <Spinner animation=\"grow\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpinnerComponent","import { getCatBreed, getCatBreedList } from 'actions'\r\nimport CardComponent from 'components/common/card/Card'\r\nimport DropDown from 'components/common/dropdown/DropDownList'\r\nimport SpinnerComponent from 'components/common/snipper/Spinner'\r\nimport { Breed } from 'enums/breed'\r\nimport { AppRoute } from 'enums/route'\r\nimport { useMemo, useEffect, useState, useCallback } from 'react'\r\nimport { Alert, Button, Col, Row } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { AppState } from 'store'\r\n\r\nimport styles from './cat.module.scss'\r\n\r\nconst CatList: React.FC<RouteComponentProps> = (props: RouteComponentProps) => {\r\n    const [currentBreed, setCurrentBreed] = useState('')\r\n    const [limit,] = useState(10)\r\n    const catsBreedList: any = useSelector<AppState, any>(state => state.breedsReducer[Breed.CATS])\r\n    const cats = useSelector<AppState, any>(state => state.catsReducer)\r\n    const loading = useSelector<AppState, boolean>(state => state.globalReducer.loadingState)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        history,\r\n        match: {\r\n            params: {\r\n                breed\r\n            }\r\n        }\r\n    }: any = props\r\n\r\n\r\n    // Memoise \r\n    const showBtn = useMemo(() => {\r\n        const len = cats[currentBreed] ? Object.values(cats[currentBreed]).length : 0\r\n        return catsBreedList?.[breed]?.page > 3 || len >= 15 || catsBreedList?.[breed]?.final\r\n\r\n    }, [catsBreedList, breed, cats, currentBreed])\r\n\r\n\r\n    const page = useMemo(() => (catsBreedList?.[breed]?.page ?? 1), [catsBreedList, breed])\r\n    const options = useMemo(() => (catsBreedList ?? []), [catsBreedList])\r\n\r\n\r\n    // Renders the cat card components\r\n    const renderCats = useCallback((data: any) => {\r\n        return (\r\n            Object.values(data).map((i: any) => {\r\n                return (\r\n                    <CardComponent\r\n                        key={i?.id}\r\n                        imgSrc={i?.url}\r\n                        size=\"23%\"\r\n                        btnLabel={`Have a closer look`}\r\n                        link={{\r\n                            to: `${AppRoute.Cats}/${currentBreed}/${i?.id}`,\r\n                            prevPath: `${AppRoute.Cats}/${currentBreed}`\r\n                        }}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }, [currentBreed])\r\n\r\n\r\n    // onchange handler that sets the current breed selected and modifies\r\n    // the route\r\n    const onSelectBreed = (e: Event) => {\r\n        const { value }: any = e.target\r\n        setCurrentBreed(value)\r\n        history.push(`${AppRoute.Cats}/${value}`)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!Object.values(catsBreedList).length) {\r\n            dispatch(getCatBreedList())\r\n        }\r\n\r\n    }, [dispatch, catsBreedList])\r\n\r\n\r\n    /**\r\n     * =======================================================================\r\n     * @description - This block will solve if the breed view should call\r\n     * the api endpoint or not without adding complexity in the action types\r\n     * inside the reducer\r\n     * =======================================================================\r\n     */\r\n    useEffect(() => {\r\n        if (currentBreed) {\r\n            if (!cats?.[currentBreed]) {\r\n                dispatch(getCatBreed({ id: currentBreed, limit, page }))\r\n            }\r\n\r\n        }\r\n\r\n    }, [dispatch, currentBreed, cats, limit, page])\r\n    /** ===================================================================== */\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentBreed(breed)\r\n    }, [breed])\r\n\r\n\r\n\r\n    /**\r\n     * @SPECS\r\n     * data-testid=\"pageHeading\"\r\n     * data-testid=\"breedDropdown\"\r\n     * data-testid=\"breedMoreBtn\"\r\n     * data-testid=\"returnHomeBtn\"\r\n     * data-testid=\"listSection\"\r\n     */\r\n\r\n    return (\r\n        <div className={styles.catList}>\r\n            <Row>\r\n                <span data-testid=\"pageHeading\" className={styles.title}>Cat Browser</span>\r\n            </Row>\r\n            <div className={styles.wrapper}>\r\n                <Row>\r\n                    <Col lg={3}>\r\n                        <div className={`${styles.paddedFlex} ${styles.selectArea}`}>\r\n                            <div>\r\n                                <DropDown\r\n                                    data-testid=\"breedDropdown\"\r\n                                    options={Object.values(options)}\r\n                                    onChange={onSelectBreed}\r\n                                    selected={currentBreed}\r\n                                />\r\n                                {\r\n                                    !showBtn &&\r\n                                    breed &&\r\n                                    <Button\r\n                                        data-testid=\"breedMoreBtn\"\r\n                                        variant=\"secondary\"\r\n                                        onClick={() => dispatch(\r\n                                            getCatBreed({\r\n                                                id: currentBreed,\r\n                                                page,\r\n                                            })\r\n                                        )}\r\n                                    >\r\n                                        Load more {`${catsBreedList[breed]?.name} breed` ?? 'cats'}\r\n                                    </Button>\r\n                                }\r\n\r\n                            </div>\r\n                            <Button\r\n                                data-testid=\"returnHomeBtn\"\r\n                                variant=\"secondary\"\r\n                                onClick={() => history.push(`${AppRoute.Home}`)}\r\n                            >\r\n                                Back to Home\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={9}>\r\n                        <div\r\n                            data-testid=\"listSection\"\r\n                            className={`${styles.paddedFlex} \r\n                            ${styles.contentArea}`}\r\n                        >\r\n                            {\r\n                                // If the result has length of more then 0\r\n                                cats?.[currentBreed] &&\r\n                                Object.values(cats?.[currentBreed]).length > 0 &&\r\n                                renderCats(cats[currentBreed])\r\n                            }\r\n\r\n                            {\r\n                                // If After calling the api and the the result count\r\n                                // is ZERO\r\n                                cats?.[currentBreed] &&\r\n                                Object.values(cats?.[currentBreed]).length < 1 &&\r\n                                <Alert key={Date.now()} variant={'warning'}>\r\n                                    No Cats found in our database.\r\n                                </Alert>\r\n                            }\r\n\r\n                            {\r\n                                // While calling the endpoint\r\n                                loading && !cats?.[currentBreed]?.length &&\r\n                                <SpinnerComponent message=\"Loading list\" />\r\n                            }\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CatList\r\n","import CatDetails from 'components/cats/CatDetails';\r\nimport CatList from 'components/cats/CatList';\r\nimport { Route, RouteComponentProps, Switch, Redirect } from 'react-router-dom';\r\n\r\nconst CatsPage: React.FC<RouteComponentProps> = (props: RouteComponentProps) => {\r\n\r\n    const { match } = props\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path={match.path} component={CatList} />\r\n            <Route exact path={`${match.path}/:breed`} component={CatList} />\r\n            <Route exact path={`${match.path}/:breed/:id`} component={CatDetails} />\r\n            <Redirect to={match.path} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default CatsPage","import { CardComponentType } from 'interfaces/cardComponent'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport styles from './card.module.scss'\r\n\r\n\r\nconst CardComponent = (props: CardComponentType) => {\r\n\r\n    const {\r\n        imgSrc,\r\n        title,\r\n        btnLabel,\r\n        text,\r\n        link,\r\n        size\r\n    } = props\r\n\r\n    return (\r\n        <Card\r\n            style={{ width: size }}\r\n            className={styles.card}\r\n        >\r\n            <Link\r\n                to={{ pathname: link?.to, state: { prevPath: link?.prevPath } }}\r\n                style={{ textDecoration: 'none' }}\r\n            >\r\n                <div className={styles.imageWrapper}>\r\n                    <img src={imgSrc} alt=\"pet\" />\r\n                </div>\r\n                <Card.Body>\r\n                    {title && <Card.Title>{title}</Card.Title>}\r\n                    {text && <Card.Text>{text}</Card.Text>}\r\n                    {btnLabel && <Button variant=\"secondary\">{btnLabel}</Button>}\r\n\r\n                </Card.Body>\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardComponent","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageWrapper\":\"card_imageWrapper__3l7co\",\"card\":\"card_card__qX785\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catList\":\"cat_catList__Bcu6q\",\"wrapper\":\"cat_wrapper__2vhvZ\",\"paddedFlex\":\"cat_paddedFlex__2TL6n\",\"contentArea\":\"cat_contentArea__1KpGn\",\"singeCat\":\"cat_singeCat__2KzAB\",\"selectArea\":\"cat_selectArea__1wN36\",\"detailSection\":\"cat_detailSection__3iMmI\",\"subTitle\":\"cat_subTitle__1BQ3s\",\"title\":\"cat_title__1ZBW5\"};"],"sourceRoot":""}
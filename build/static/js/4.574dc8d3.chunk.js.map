{"version":3,"sources":["config/keys.ts","api/catApi.ts","components/cats/CatDetails.tsx","actions/catsAction.ts","components/common/dropdown/DropDownList.tsx","components/common/snipper/Spinner.tsx","components/cats/CatList.tsx","pages/cats/CatsPage.tsx","components/common/card/Card.tsx","components/common/card/card.module.scss","components/common/dropdown/dropdown.module.scss","components/common/snipper/spinner.module.scss","components/cats/cat.module.scss"],"names":["config","catApiKey","process","API_KEY","catAPI","axios","create","baseURL","headers","CatDetails","props","params","match","id","breed","prevPath","location","state","initialCatState","useMemo","url","useState","cat","setCat","cats","useSelector","catsReducer","dispatch","useDispatch","useEffect","console","log","a","type","GlobalType","LOADING_START","payload","get","data","CatsType","GET_CAT","LOADING_STOP","ERROR","show","message","getCat","className","src","height","width","alt","breeds","name","Button","variant","onClick","history","push","DropDown","options","onChange","selected","renderDropDown","useCallback","arr","map","item","value","Form","Select","aria-label","styles","dropDown","disabled","SpinnerComponent","spinnerWrapper","Spinner","animation","role","CatList","currentBreed","setCurrentBreed","catsBreedList","breedsReducer","catsBreed","loading","globalReducer","loadingState","renderCats","Object","values","i","Card","imgSrc","size","btnLabel","link","to","AppRoute","Cats","length","dropDownObject","GET_CAT_BREED_LIST","page","limit","GET_CAT_BREED","catList","Row","title","wrapper","Col","lg","paddedFlex","selectArea","e","target","Home","listArea","CatsPage","exact","path","component","CardComponent","text","style","card","pathname","textDecoration","imageWrapper","Body","Title","Text","module","exports"],"mappings":"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","file":"static/js/4.574dc8d3.chunk.js","sourcesContent":["const config = {\r\n    catApiKey: process.env.API_KEY\r\n}\r\n\r\nexport default config","import axios from 'axios'\r\nimport config from '../config/keys'\r\n\r\n/**\r\n * @description - This will also serve as an interceptor for all catapi endpoints\r\n */\r\n\r\nconst version = 'v1'\r\n\r\nconst catAPI = axios.create({\r\n    baseURL: `https://api.thecatapi.com/${version}`,\r\n    headers: {\r\n        'x-api-key': config.catApiKey\r\n    }\r\n})\r\n\r\nexport default catAPI","import { getCat } from 'actions'\r\nimport { Cat, CatList } from 'interfaces/cat'\r\nimport React, { useEffect, useMemo, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { AppState } from 'store'\r\n\r\n\r\nconst CatDetails: React.FC<RouteComponentProps> = (props: RouteComponentProps) => {\r\n\r\n    const { params }: any = props.match\r\n    const { id, breed } = params\r\n    const { prevPath }: any = props.location.state\r\n\r\n    const initialCatState: Cat = useMemo(() => ({ id: '', url: '' }), [])\r\n\r\n    const [cat, setCat] = useState<Cat>(initialCatState)\r\n    const cats = useSelector<AppState, CatList>(state => state.catsReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    /**\r\n     * =======================================================================\r\n     * @description - This block will solve if the single view should call\r\n     * the api endpoint or not without adding complexity in the action types\r\n     * inside the reducer\r\n     * =======================================================================\r\n     */\r\n\r\n    useEffect(() => {\r\n        console.log(prevPath)\r\n        if (cats[breed]?.[id]) {\r\n            setCat(cats[breed][id])\r\n        }\r\n\r\n        if (!cats[breed]?.[id]) {\r\n            dispatch(getCat(id, breed))\r\n\r\n        }\r\n\r\n    }, [dispatch, breed, cats, id, prevPath])\r\n\r\n    console.log(props.location)\r\n    /** ===================================================================== */\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <img src={cat?.url} height={'50%'} width={'50%'} alt=\"Cat\" />\r\n            {cat?.breeds?.[0]?.name}\r\n            <Button variant=\"secondary\" onClick={() => props.history.push(`${prevPath}`)}>Go Back</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CatDetails","import catAPI from 'api/catApi'\r\nimport { AxiosResponse } from 'axios'\r\nimport { CatsType, GlobalType } from 'enums/actionTypes'\r\nimport { SearchParamsType } from 'interfaces/searchParams'\r\nimport { AppDispatch } from 'store'\r\n\r\n\r\nexport const getCatBreed = (params: SearchParamsType) => async (dispatch: AppDispatch) => {\r\n\r\n    dispatch({\r\n        type: GlobalType.LOADING_START,\r\n        payload: false\r\n    })\r\n\r\n\r\n    const { id, page, limit } = params\r\n    try {\r\n        const { data }: AxiosResponse = await catAPI.get(\r\n            `/images/search?page=${page ?? 1}&limit=${limit ?? 10}&breed_id=${id}`\r\n        )\r\n\r\n\r\n        return (\r\n            dispatch({\r\n                type: CatsType.GET_CAT_BREED,\r\n                payload: { id, data }\r\n            }),\r\n            dispatch({\r\n                type: GlobalType.LOADING_STOP,\r\n                payload: false\r\n            })\r\n        )\r\n    } catch (error: any) {\r\n\r\n        dispatch({\r\n            type: GlobalType.LOADING_STOP,\r\n            payload: false\r\n        })\r\n\r\n        dispatch({\r\n            type: GlobalType.ERROR,\r\n            payload: {\r\n                show: true,\r\n                message: 'Apologies but we could not load new cats for you at this time! Miau!'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getCat = (id: string, breed: string) => async (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: GlobalType.LOADING_START,\r\n        payload: false\r\n    })\r\n    try {\r\n        const { data }: AxiosResponse = await catAPI.get(`/images/${id}`)\r\n\r\n        return (\r\n            dispatch({\r\n                type: CatsType.GET_CAT,\r\n                payload: { id: breed, data }\r\n            }),\r\n\r\n            dispatch({\r\n                type: GlobalType.LOADING_STOP,\r\n                payload: false\r\n            })\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GlobalType.LOADING_STOP,\r\n            payload: false\r\n        })\r\n\r\n        dispatch({\r\n            type: GlobalType.ERROR,\r\n            payload: {\r\n                show: true,\r\n                message: 'Apologies, the cat is not home! Miau!'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getCatBreedList = () => async (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: GlobalType.LOADING_START,\r\n        payload: false\r\n    })\r\n\r\n    try {\r\n        const { data }: AxiosResponse = await catAPI.get(`/breeds`)\r\n\r\n        const dropDownObject = data.map(({ id, name }: { id: string, name: string }) => ({ id, name }))\r\n\r\n        return (\r\n            dispatch({\r\n                type: CatsType.GET_CAT_BREED_LIST,\r\n                payload: dropDownObject\r\n            }),\r\n            dispatch({\r\n                type: GlobalType.LOADING_STOP,\r\n                payload: false\r\n            })\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GlobalType.LOADING_STOP,\r\n            payload: false\r\n        })\r\n\r\n        dispatch({\r\n            type: GlobalType.ERROR,\r\n            payload: {\r\n                show: true,\r\n                message: 'Apologies, the cats are busy at the moment! Miau!'\r\n            }\r\n        })\r\n    }\r\n}","import { DropDownProps, DropDownType } from 'interfaces/dropdown'\r\nimport { useCallback } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nimport styles from './dropdown.module.scss'\r\n\r\nconst DropDown: React.FC<DropDownProps> = (props: DropDownProps) => {\r\n    const { options, onChange, selected } = props\r\n\r\n    const renderDropDown = useCallback((arr: DropDownType[]) => {\r\n        return arr.map((item: DropDownType) => {\r\n            return (\r\n                <option key={item.id} value={item.id}>{item.name}</option>\r\n            )\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Form.Select\r\n            aria-label=\"Default select example\"\r\n            className={styles.dropDown}\r\n            value={selected}\r\n            onChange={onChange}\r\n        >\r\n            <option value=\"\" disabled>Select Breed</option>\r\n            {renderDropDown(options)}\r\n        </Form.Select>\r\n    )\r\n}\r\n\r\nexport default DropDown","import { Spinner } from 'react-bootstrap'\r\n\r\nimport styles from './spinner.module.scss'\r\n\r\nconst SpinnerComponent = () => {\r\n    return (\r\n        <div className={styles.spinnerWrapper}>\r\n            <Spinner animation=\"grow\" variant=\"secondary\" />\r\n            <Spinner animation=\"grow\" variant=\"secondary\" />\r\n            <Spinner animation=\"grow\" variant=\"secondary\" />\r\n            <Spinner animation=\"grow\" variant=\"secondary\" />\r\n            <Spinner animation=\"grow\" variant=\"secondary\" />\r\n            <Spinner animation=\"grow\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpinnerComponent","import { getCatBreed, getCatBreedList } from 'actions'\r\nimport CardComponent from 'components/common/card/Card'\r\nimport DropDown from 'components/common/dropdown/DropDownList'\r\nimport SpinnerComponent from 'components/common/snipper/Spinner'\r\nimport { AppRoute } from 'enums/route'\r\nimport { DropDownType } from 'interfaces/dropdown'\r\nimport { useMemo, useEffect, useState, useCallback } from 'react'\r\nimport { Button, Col, Row } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { AppState } from 'store'\r\n\r\nimport styles from './cat.module.scss'\r\n\r\nconst CatList: React.FC<RouteComponentProps> = (props: RouteComponentProps) => {\r\n    const [currentBreed, setCurrentBreed] = useState('')\r\n    const catsBreedList: DropDownType[] = useSelector<AppState, DropDownType[]>(state => state.breedsReducer.catsBreed)\r\n    const cats = useSelector<AppState, any>(state => state.catsReducer)\r\n    const loading = useSelector<AppState, boolean>(state => state.globalReducer.loadingState)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { match, history } = props\r\n    const { breed }: any = match.params\r\n\r\n\r\n    // Renders the cat card components\r\n    const renderCats = useCallback((data: any) => {\r\n        return (\r\n            Object.values(data).map((i: any) => {\r\n                return (\r\n                    <CardComponent\r\n                        key={i?.id}\r\n                        imgSrc={i?.url}\r\n                        size=\"23%\"\r\n                        btnLabel={`Have a closer look`}\r\n                        link={{\r\n                            to: `${AppRoute.Cats}/${currentBreed}/${i?.id}`,\r\n                            prevPath: `${AppRoute.Cats}/${currentBreed}`\r\n                        }}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }, [currentBreed])\r\n\r\n    const options: DropDownType[] = useMemo(() => (catsBreedList ?? []), [catsBreedList])\r\n\r\n    // onchange handler that sets the current breed selected and modifies\r\n    // the route\r\n    const onSelectBreed = (e: Event) => {\r\n        const { value }: any = e.target\r\n        setCurrentBreed(value)\r\n        history.push(`${AppRoute.Cats}/${value}`)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!catsBreedList.length) {\r\n            dispatch(getCatBreedList())\r\n        }\r\n\r\n    }, [dispatch, catsBreedList])\r\n\r\n\r\n    /**\r\n     * =======================================================================\r\n     * @description - This block will solve if the breed view should call\r\n     * the api endpoint or not without adding complexity in the action types\r\n     * inside the reducer\r\n     * =======================================================================\r\n     */\r\n    useEffect(() => {\r\n        if (currentBreed) {\r\n            if (!cats?.[currentBreed]) {\r\n                dispatch(getCatBreed({ id: currentBreed }))\r\n            }\r\n        }\r\n    }, [dispatch, currentBreed, cats])\r\n    /** ===================================================================== */\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentBreed(breed)\r\n    }, [breed])\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.catList}>\r\n            <Row>\r\n                <span className={styles.title}>Cat Browser</span>\r\n            </Row>\r\n            <div className={styles.wrapper}>\r\n                <Row>\r\n                    <Col lg={3}>\r\n                        <div className={`${styles.paddedFlex} ${styles.selectArea}`}>\r\n                            <DropDown\r\n                                options={options}\r\n                                onChange={onSelectBreed}\r\n                                selected={currentBreed}\r\n                            />\r\n                            <Button variant=\"secondary\" onClick={() => history.push(`${AppRoute.Home}`)}>Go Back</Button>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={9}>\r\n                        <div className={`${styles.paddedFlex} ${styles.listArea}`}>\r\n                            {\r\n                                cats?.[currentBreed] &&\r\n                                Object.values(cats?.[currentBreed]).length &&\r\n                                renderCats(cats[currentBreed])\r\n                            }\r\n\r\n                            {\r\n                                loading && !cats?.[currentBreed]?.length &&\r\n                                <SpinnerComponent />\r\n                            }\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CatList\r\n","import CatDetails from 'components/cats/CatDetails';\r\nimport CatList from 'components/cats/CatList';\r\nimport { Route, RouteComponentProps, Switch, Redirect } from 'react-router-dom';\r\n\r\nconst CatsPage: React.FC<RouteComponentProps> = (props: RouteComponentProps) => {\r\n\r\n    const { match } = props\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path={match.path} component={CatList} />\r\n            <Route exact path={`${match.path}/:breed`} component={CatList} />\r\n            <Route exact path={`${match.path}/:breed/:id`} component={CatDetails} />\r\n            <Redirect to={match.path} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default CatsPage","import { CardComponentType } from 'interfaces/cardComponent'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport styles from './card.module.scss'\r\n\r\n\r\nconst CardComponent = (props: CardComponentType) => {\r\n    const { imgSrc, title, btnLabel, text, link, size } = props\r\n    return (\r\n        <Card\r\n            style={{ width: size }}\r\n            className={styles.card}\r\n        >\r\n            <Link\r\n                to={{ pathname: link?.to, state: { prevPath: link?.prevPath } }}\r\n                style={{ textDecoration: 'none' }}\r\n            >\r\n                <div className={styles.imageWrapper}>\r\n                    <img src={imgSrc} alt=\"pet\" />\r\n                </div>\r\n                <Card.Body>\r\n                    {title && <Card.Title>{title}</Card.Title>}\r\n                    {text && <Card.Text>{text}</Card.Text>}\r\n                    {btnLabel && <Button variant=\"secondary\">{btnLabel}</Button>}\r\n\r\n                </Card.Body>\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardComponent","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageWrapper\":\"card_imageWrapper__3l7co\",\"card\":\"card_card__qX785\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropDown\":\"dropdown_dropDown__QaYkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"spinner_spinnerWrapper__39s_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catList\":\"cat_catList__Bcu6q\",\"wrapper\":\"cat_wrapper__2vhvZ\",\"paddedFlex\":\"cat_paddedFlex__2TL6n\",\"listArea\":\"cat_listArea__zKPO8\",\"selectArea\":\"cat_selectArea__1wN36\",\"title\":\"cat_title__1ZBW5\"};"],"sourceRoot":""}
{"version":3,"sources":["enums/breed.ts","enums/route.ts","enums/actionTypes.ts","helpers/LazyLoader.tsx","pages/main/Main.tsx","components/common/notification/Notification.tsx","App.tsx","reportWebVitals.ts","helpers/objectHelper.ts","reducers/catReducer.ts","reducers/dogReducer.ts","reducers/breedReducer.ts","reducers/globalReducer.ts","reducers/index.ts","store/index.ts","index.tsx"],"names":["Breed","AppRoute","CatsType","DogsType","GlobalType","BreedType","LazyLoad","getComponent","AsyncComponent","state","Component","this","then","setState","props","Main","children","Notification","position","delay","AppErrorState","useSelector","globalReducer","error","useState","show","setShow","dispatch","useDispatch","useEffect","time1","setTimeout","type","ERROR","payload","clearTimeout","ToastContainer","className","style","zIndex","color","Toast","onClose","autohide","bg","Header","src","alt","title","Body","message","CatsPage","module","default","HomePage","App","exact","path","Home","component","Cats","Dogs","render","history","margin","Button","variant","onClick","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","_delete","rawObject","prop","Object","keys","reduce","object","key","_mapKeys","rawArray","newObject","length","Set","forEach","i","id","initialState","catsReducer","action","GET_CAT_BREED","breed","data","GET_CAT","ADD_CAT","EDIT_CAT","DELETE_CAT","dogsReducer","GET_DOG_BREED","images","GET_DOG","ADD_DOG","EDIT_DOG","DELETE_DOG","CATS","DOGS","breedsReducer","GET_CAT_BREED_LIST","BREED_LIST_INCREMENT","breed_id","page","BREED_LIST_FINAL","GET_DOG_BREED_LIST","loadingState","LOADING_START","LOADING_STOP","rootReducer","combineReducers","middleWares","thunk","composeEnhancers","compose","Store","createStore","undefined","applyMiddleware","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.6684df17.chunk.js","sourcesContent":["export enum Breed {\r\n    CATS = 'catsBreed',\r\n    DOGS = 'dogsBreed',\r\n    BIRDS = 'birdsBreed',\r\n    BREED_LIST = 'breedList',\r\n}","export enum AppRoute {\r\n    Home = '/',\r\n    Cats = '/cats',\r\n    Dogs = '/dogs'\r\n}","export enum CatsType {\r\n    GET_CAT_BREED = \"GET_CAT_BREED\",\r\n    GET_CAT_BREED_LIST = \"GET_CAT_BREED_LIST\",\r\n    GET_CAT = \"GET_CAT\",\r\n    ADD_CAT = \"ADD_CAT\",\r\n    EDIT_CAT = \"EDIT_CAT\",\r\n    DELETE_CAT = \"DELETE_CAT\"\r\n}\r\n\r\nexport enum DogsType {\r\n    GET_DOG_BREED = \"GET_DOG_BREED\",\r\n    GET_DOG_BREED_LIST = \"GET_DOG_BREED_LIST\",\r\n    GET_DOG = \"GET_DOG\",\r\n    ADD_DOG = \"ADD_DOG\",\r\n    EDIT_DOG = \"EDIT_DOG\",\r\n    DELETE_DOG = \"DELETE_DOG\"\r\n}\r\n\r\nexport enum GlobalType {\r\n    LOADING_START = \"LOADING_START\",\r\n    LOADING_STOP = \"LOADING_STOP\",\r\n    ERROR = \"ERROR\"\r\n}\r\n\r\n\r\nexport enum BreedType {\r\n    BREED_LIST_FINAL = \"BREED_LIST_FINAL\",\r\n    BREED_LIST_INCREMENT = \"BREED_LIST_INCREMENT\"\r\n}","import { Component } from \"react\"\r\n\r\n/**\r\n * =================================================================\r\n * @description - This will help in code splitting by lazy loading \r\n * imported components\r\n * @param getComponent - typeof function \r\n * @returns HOC\r\n * =================================================================\r\n */\r\nconst LazyLoad = (getComponent: any) => {\r\n    class AsyncComponent extends Component {\r\n        static Component = null;\r\n        state = { Component: AsyncComponent.Component };\r\n\r\n        componentDidMount() {\r\n            if (!this.state.Component) {\r\n                getComponent().then((Component: any) => {\r\n                    AsyncComponent.Component = Component\r\n                    this.setState({ Component })\r\n                })\r\n            }\r\n        }\r\n        render() {\r\n            const { Component }: { Component: any } = this.state\r\n            if (Component) {\r\n                return <Component {...this.props} />\r\n            }\r\n            return null\r\n        }\r\n    }\r\n    return AsyncComponent;\r\n}\r\n\r\nexport default LazyLoad","const Main: React.FC = ({ children }) => {\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main","import { GlobalType } from 'enums/actionTypes'\r\nimport { ErrorObjType, NotificationType } from 'interfaces/notification'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Toast, ToastContainer } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppState } from 'store'\r\n\r\n\r\nconst Notification: React.FC<NotificationType> = (props: NotificationType) => {\r\n    const { position, delay } = props\r\n    const AppErrorState = useSelector<AppState, ErrorObjType>(state => state.globalReducer.error)\r\n    const [show, setShow] = useState<boolean>(AppErrorState.show)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        let time1 = setTimeout(() => {\r\n            dispatch({\r\n                type: GlobalType.ERROR,\r\n                payload: {\r\n                    show: false\r\n                }\r\n            })\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearTimeout(time1)\r\n        }\r\n    }, [AppErrorState.show, dispatch])\r\n\r\n    useEffect(() => {\r\n        setShow(AppErrorState.show)\r\n        return () => {\r\n            setShow(AppErrorState.show)\r\n        }\r\n    }, [AppErrorState.show])\r\n\r\n    return (\r\n        <ToastContainer\r\n            className=\"p-3\"\r\n            position={position ?? 'top-end'}\r\n            style={{ zIndex: 2, color: 'white' }}\r\n        >\r\n            <Toast\r\n                show={show}\r\n                onClose={() => setShow(!show)}\r\n                delay={delay ?? 3000}\r\n                autohide\r\n                bg=\"danger\"\r\n            >\r\n                <Toast.Header>\r\n                    <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded me-2\"\r\n                        alt=\"\"\r\n                    />\r\n                    <strong className=\"me-auto\">{AppErrorState.title ?? 'Error'}</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>{AppErrorState.message}</Toast.Body>\r\n            </Toast>\r\n        </ToastContainer>\r\n    )\r\n}\r\n\r\nexport default Notification","import LazyLoad from 'helpers/LazyLoader'\nimport { AppRoute } from 'enums/route'\nimport Main from 'pages/main/Main'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\nimport './App.scss'\nimport Notification from 'components/common/notification/Notification'\nimport { Button } from 'react-bootstrap'\n\nconst CatsPage = LazyLoad(() => import('pages/cats/CatsPage').then(module => module.default))\nconst HomePage = LazyLoad(() => import('pages/home/HomePage').then(module => module.default))\n\nconst App: React.FC = () => {\n\n  return (\n    <Main>\n      <Notification />\n\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={AppRoute.Home} component={HomePage} />\n          <Route path={AppRoute.Cats} component={CatsPage} />\n          <Route path={AppRoute.Dogs} render={({ history }) => (\n            <div>\n              <div\n                style={{\n                  margin: '20%',\n                }}\n              >\n                <h1>Under Construction</h1>\n                <Button\n                  variant=\"warning\"\n                  onClick={() => history.push('/')}\n                >\n                  Back to home page\n                </Button>\n              </div>\n            </div>\n          )} />\n        </Switch>\n      </BrowserRouter>\n    </Main>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Cat, CatList } from 'interfaces/cat'\r\n\r\n/**\r\n * ===============================================================================\r\n * @description - This function copies over object properties that is not the prop\r\n * param\r\n * @param {...rawObject} rawObject - The original object\r\n * @param {string} prop - The key that should be deleted\r\n * @return {...newObject} - Object not including the prop key\r\n * ===============================================================================\r\n */\r\nexport const _delete = (rawObject: any, prop: string) => {\r\n    const newObject = Object.keys(rawObject).reduce((object: any, key: string) => {\r\n        if (key !== prop) {\r\n            object[key] = rawObject[key]\r\n        }\r\n        return object\r\n    }, {})\r\n\r\n    return newObject\r\n}\r\n// ===============================================================================\r\n\r\n\r\n/**\r\n * ===============================================================================\r\n * @description - This maps the array and convert it into an object and uses the\r\n * item ID as the object key and the item as the object value\r\n * @param {[]} rawArray - the raw array\r\n * @param {...state} state- the application state\r\n * @return { [key: string]: Cat } - Object with item.id as the key\r\n * ===============================================================================\r\n */\r\nexport const _mapKeys = (state = {}, rawArray: Cat[]) => {\r\n\r\n    // copies the current app state\r\n    const newObject: CatList = { ...state };\r\n\r\n    if (!rawArray.length) return newObject\r\n\r\n    // Overwrites any existing object or add a new one\r\n    new Set(rawArray).forEach((i: any) => newObject[i.id] = i)\r\n\r\n    return newObject\r\n}\r\n// ===============================================================================","import { CatsType } from 'enums/actionTypes'\r\nimport { _delete, _mapKeys, } from 'helpers/objectHelper'\r\nimport { CatList } from 'interfaces/cat'\r\nimport { AnyAction } from 'redux'\r\n\r\nconst initialState: CatList = {}\r\n\r\nconst catsReducer = (state = initialState, action: AnyAction) => {\r\n    switch (action.type) {\r\n\r\n        case CatsType.GET_CAT_BREED:\r\n            return {\r\n                ...state,\r\n                [action.payload.breed]: {\r\n                    ..._mapKeys({ ...state[action.payload.breed] }, action.payload.data)\r\n                }\r\n            }\r\n\r\n        case CatsType.GET_CAT:\r\n            return {\r\n                ...state,\r\n                [action.payload.breed]: {\r\n                    ...state[action.payload.breed],\r\n                    [action.payload.data.id]: action.payload.data\r\n                }\r\n            }\r\n\r\n        case CatsType.ADD_CAT:\r\n            return {\r\n                ...state,\r\n                [action.payload.breed]: {\r\n                    ...state[action.payload.breed],\r\n                    [action.payload.data.id]: action.payload.data\r\n                }\r\n            }\r\n\r\n        case CatsType.EDIT_CAT:\r\n            return {\r\n                ...state,\r\n                [action.payload.breed]: {\r\n                    ...state[action.payload.breed],\r\n                    [action.payload.data.id]: action.payload.data\r\n                }\r\n            }\r\n\r\n        case CatsType.DELETE_CAT:\r\n            return _delete(state, action.payload)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default catsReducer","import { DogsType } from 'enums/actionTypes'\r\nimport { _delete } from 'helpers/objectHelper'\r\nimport { DogList } from 'interfaces/dog'\r\nimport { AnyAction } from 'redux'\r\n\r\nconst initialState: DogList = {}\r\n\r\nconst dogsReducer = (state = initialState, action: AnyAction) => {\r\n    switch (action.type) {\r\n\r\n        case DogsType.GET_DOG_BREED:\r\n            return { ...state, images: action.payload }\r\n\r\n        case DogsType.GET_DOG:\r\n            return state\r\n\r\n        case DogsType.ADD_DOG:\r\n            return state\r\n\r\n        case DogsType.EDIT_DOG:\r\n            return state\r\n\r\n        case DogsType.DELETE_DOG:\r\n            return _delete(state, action.payload)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dogsReducer","import { BreedType, CatsType, DogsType } from 'enums/actionTypes'\r\nimport { Breed } from 'enums/breed'\r\nimport { _mapKeys } from 'helpers/objectHelper'\r\nimport { AnyAction } from 'redux'\r\n\r\nconst initialState: any = {\r\n    [Breed.CATS]: {},\r\n    [Breed.DOGS]: {}\r\n}\r\n\r\nconst breedsReducer = (state = initialState, action: AnyAction) => {\r\n    switch (action.type) {\r\n\r\n        case CatsType.GET_CAT_BREED_LIST:\r\n            return {\r\n                ...state,\r\n                [Breed.CATS]: {\r\n                    ..._mapKeys({ ...state[Breed.CATS] }, action.payload)\r\n                }\r\n            }\r\n        case BreedType.BREED_LIST_INCREMENT:\r\n            return {\r\n                ...state,\r\n                [Breed.CATS]: {\r\n                    ...state[Breed.CATS],\r\n                    [action.payload.breed_id]: {\r\n                        ...state[Breed.CATS][action.payload.breed_id],\r\n                        ...action.payload,\r\n                        page: ++action.payload.page\r\n                    }\r\n                }\r\n            }\r\n\r\n        case BreedType.BREED_LIST_FINAL:\r\n            return {\r\n                ...state,\r\n                [Breed.CATS]: {\r\n                    ...state[Breed.CATS],\r\n                    [action.payload.breed_id]: {\r\n                        ...state[Breed.CATS][action.payload.breed_id],\r\n                        ...action.payload\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        case DogsType.GET_DOG_BREED_LIST:\r\n            return {\r\n                ...state,\r\n                [Breed.DOGS]: {\r\n                    ..._mapKeys({ ...state[Breed.DOGS] }, action.payload)\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default breedsReducer","import { GlobalType } from 'enums/actionTypes'\r\nimport { ErrorObjType } from 'interfaces/notification'\r\nimport { AnyAction } from 'redux'\r\n\r\nconst initialState: { loadingState: boolean, error: ErrorObjType } = {\r\n    loadingState: false,\r\n    error: {\r\n        show: false,\r\n        message: '',\r\n        title: ''\r\n    }\r\n}\r\n\r\nconst catsReducer = (state = initialState, action: AnyAction) => {\r\n    switch (action.type) {\r\n\r\n        case GlobalType.LOADING_START:\r\n            return {\r\n                ...state,\r\n                loadingState: true\r\n            }\r\n\r\n        case GlobalType.LOADING_STOP:\r\n            return {\r\n                ...state,\r\n                loadingState: false\r\n            }\r\n\r\n        case GlobalType.ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default catsReducer","/**\r\n* ====================================================================\r\n* @description Main reducer file that contains imported reducers\r\n* @returns root reducer\r\n* ====================================================================\r\n*/\r\n\r\n\r\n/** IMPORT DEPENDENCIES */\r\nimport { combineReducers } from 'redux'\r\n\r\n\r\n/** IMPORT REDUCERS */\r\nimport catsReducer from 'reducers/catReducer'\r\nimport dogsReducer from 'reducers/dogReducer'\r\nimport breedsReducer from 'reducers/breedReducer'\r\nimport globalReducer from 'reducers/globalReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    catsReducer,\r\n    dogsReducer,\r\n    breedsReducer,\r\n    globalReducer,\r\n})\r\n\r\n\r\n\r\nexport default rootReducer","/**\r\n * ====================================================================\r\n * @description The single source of truth in react state management\r\n * @returns redux store\r\n * ====================================================================\r\n */\r\n\r\n\r\n/** IMPORT LIBRARIES */\r\nimport { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"reducers\"\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n    }\r\n}\r\n\r\n//Toggle switch for Redux dev tool\r\nlet enviroment = process.env.NODE_ENV\r\n\r\n\r\nconst middleWares = [thunk]\r\n\r\nconst composeEnhancers =\r\n    (enviroment === 'development' &&\r\n        (window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose)) ||\r\n    compose;\r\n\r\nconst Store = createStore(\r\n    rootReducer,\r\n    undefined,\r\n    composeEnhancers(applyMiddleware(...middleWares))\r\n)\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof Store.dispatch\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport Store from 'store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}